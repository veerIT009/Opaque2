{"version":3,"file":"js/chunks/407.js","mappings":"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","sources":["webpack:///./resources/pos/src/member/components/book-requests/BookRequestForm.js","webpack:///./resources/pos/src/member/components/book-requests/bookRequestValidate.js","webpack:///./resources/pos/src/member/store/actions/bookRequestAction.js","webpack:///./resources/pos/src/member/components/book-requests/CreateBookRequest.js","webpack:///./resources/pos/src/member/components/book-requests/EditBookRequest.js","webpack:///./resources/pos/src/member/components/book-requests/DeleteBookRequest.js","webpack:///./resources/pos/src/member/components/book-requests/BookRequestModal.js","webpack:///./resources/pos/src/member/components/book-requests/BookRequests.js"],"sourcesContent":["import React, { createRef, useEffect } from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport bookRequestValidate from './bookRequestValidate';\r\nimport { bookFormatOptions } from \"../../../admin/constants\";\r\nimport InputGroup from '../../../shared/components/InputGroup';\r\nimport Select from '../../../shared/components/Select';\r\nimport SaveAction from '../../../shared/action-buttons/SaveAction';\r\nimport { getFormattedOptions } from \"../../../shared/sharedMethod\";\r\n\r\nconst BookRequestForm = props => {\r\n    const { onSaveBookRequest, handleSubmit } = props;\r\n    const inputRef = createRef();\r\n    const bookFormats = getFormattedOptions(bookFormatOptions);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    }, []);\r\n\r\n    const onSave = formValues => {\r\n        const { book_name, isbn, edition, format } = formValues;\r\n        onSaveBookRequest({ book_name, isbn, edition, format: format.id });\r\n    };\r\n\r\n    return (\r\n        <div className=\"animated fadeIn \">\r\n\r\n            <Field name=\"book_name\" label=\"books.select.book.label\" required inputRef={inputRef} groupText=\"book\"\r\n                component={InputGroup} />\r\n\r\n\r\n            <Field name=\"isbn\" label=\"book-request.input.isbn.label\" required groupText=\"id-card\"\r\n                component={InputGroup} />\r\n\r\n            <Field name=\"edition\" label=\"book-request.input.edition.label\" required groupText=\"file-text\"\r\n                component={InputGroup} />\r\n\r\n            <Field name=\"format\" label=\"book-request.select.format.label\" required options={bookFormats}\r\n                placeholder=\"book-request.select.format.placeholder\" groupText=\"wpforms\" component={Select} />\r\n\r\n            <SaveAction onSave={handleSubmit(onSave)} {...props} />\r\n        </div>\r\n    );\r\n};\r\n\r\nBookRequestForm.propTypes = {\r\n    initialValues: PropTypes.object,\r\n    onSaveBookRequest: PropTypes.func,\r\n    handleSubmit: PropTypes.func,\r\n};\r\n\r\nexport default reduxForm({ form: 'bookRequestForm', validate: bookRequestValidate })(BookRequestForm);\r\n","import {getFormattedMessage} from \"../../../shared/sharedMethod\";\r\n\r\nexport default formValues => {\r\n    const errors = {};\r\n    if (!formValues.first_name) {\r\n        errors.first_name = getFormattedMessage('profile.input.first-name.validate.label');\r\n    }\r\n    return errors;\r\n};\r\n","import { bookRequestActionType, toastType } from \"../../constants\";\r\nimport apiConfig from \"../../config/apiConfig\";\r\nimport { setLoading } from \"../../../store/action/progressBarAction\";\r\nimport { addToast } from \"../../../store/action/toastAction\";\r\nimport { toggleModal } from \"../../../store/action/modalAction\";\r\nimport requestParam from \"../../../shared/lms-requestParam\";\r\nimport { setTotalRecord } from \"./totalRecordAction\";\r\nimport _ from \"lodash\";\r\nimport { getFormattedMessage } from \"../../../shared/sharedMethod\";\r\nimport { apiBaseURL } from \"../../../constants\";\r\n\r\nexport const fetchBookRequests =\r\n    (filter = {}, isLoading = false) =>\r\n    async (dispatch) => {\r\n        isLoading ? dispatch(setLoading(true)) : null;\r\n        let url = apiBaseURL.BOOK_REQUEST;\r\n        if (\r\n            !_.isEmpty(filter) &&\r\n            (filter.limit ||\r\n                filter.order_By ||\r\n                filter.search ||\r\n                filter.pageSize)\r\n        ) {\r\n            url += requestParam(filter);\r\n        }\r\n        await apiConfig\r\n            .get(url)\r\n            .then((response) => {\r\n                if (response) {\r\n                    dispatch({\r\n                        type: bookRequestActionType.FETCH_ADMIN_BOOKS_REQUEST,\r\n                        payload: response.data.data,\r\n                    });\r\n                    if (response.data) {\r\n                        dispatch(setTotalRecord(response.data.totalRecords));\r\n                    }\r\n                }\r\n                isLoading ? dispatch(setLoading(false)) : null;\r\n            })\r\n            .catch(({ response }) => {\r\n                if (response) {\r\n                    dispatch(\r\n                        addToast({\r\n                            text: response.data.message,\r\n                            type: toastType.ERROR,\r\n                        })\r\n                    );\r\n                }\r\n                isLoading ? dispatch(setLoading(false)) : null;\r\n            });\r\n    };\r\n\r\nexport const addBookRequest = (bookRequest, filterObj) => async (dispatch) => {\r\n    await apiConfig\r\n        .post(apiBaseURL.BOOK_REQUEST, bookRequest)\r\n        .then((response) => {\r\n            if (response) {\r\n                dispatch({\r\n                    type: bookRequestActionType.ADD_ADMIN_BOOK_REQUEST,\r\n                    payload: response.data.data,\r\n                });\r\n                dispatch(\r\n                    addToast({\r\n                        text: getFormattedMessage(\r\n                            \"book-request.success.create.message\"\r\n                        ),\r\n                    })\r\n                );\r\n                dispatch(toggleModal());\r\n                dispatch(fetchBookRequests(filterObj));\r\n            }\r\n        })\r\n        .catch(({ response }) => {\r\n            if (response) {\r\n                dispatch(\r\n                    addToast({\r\n                        text: response.data.message,\r\n                        type: toastType.ERROR,\r\n                    })\r\n                );\r\n            }\r\n        });\r\n};\r\n\r\nexport const editBookRequest =\r\n    (bookRequestId, bookRequest) => async (dispatch) => {\r\n        await apiConfig\r\n            .put(apiBaseURL.BOOK_REQUEST + \"/\" + bookRequestId, bookRequest)\r\n            .then((response) => {\r\n                if (response) {\r\n                    dispatch({\r\n                        type: bookRequestActionType.EDIT_ADMIN_BOOK_REQUEST,\r\n                        payload: response.data.data,\r\n                    });\r\n                    dispatch(\r\n                        addToast({\r\n                            text: getFormattedMessage(\r\n                                \"book-request.success.edit.message\"\r\n                            ),\r\n                        })\r\n                    );\r\n                    dispatch(toggleModal());\r\n                }\r\n            })\r\n            .catch(({ response }) => {\r\n                if (response) {\r\n                    dispatch(\r\n                        addToast({\r\n                            text: response.data.message,\r\n                            type: toastType.ERROR,\r\n                        })\r\n                    );\r\n                }\r\n            });\r\n    };\r\n\r\nexport const deleteBookRequest = (bookRequestId) => async (dispatch) => {\r\n    await apiConfig\r\n        .delete(apiBaseURL.BOOK_REQUEST + \"/\" + bookRequestId)\r\n        .then(() => {\r\n            dispatch({\r\n                type: bookRequestActionType.DELETE_ADMIN_BOOK_REQUEST,\r\n                payload: bookRequestId,\r\n            });\r\n            dispatch(\r\n                addToast({\r\n                    text: getFormattedMessage(\r\n                        \"book-request.success.delete.message\"\r\n                    ),\r\n                })\r\n            );\r\n            dispatch(toggleModal());\r\n        })\r\n        .catch(({ response }) => {\r\n            if (response) {\r\n                dispatch(\r\n                    addToast({\r\n                        text: response.data.message,\r\n                        type: toastType.ERROR,\r\n                    })\r\n                );\r\n            }\r\n        });\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport BookRequestForm from './BookRequestForm';\r\nimport Modal from '../../../shared/components/Modal';\r\nimport {addBookRequest} from '../../store/actions/bookRequestAction';\r\nimport {Filters} from \"../../../constants\";\r\n\r\nconst CreateBookRequest = (props) => {\r\n    const { addBookRequest, toggleModal } = props;\r\n\r\n    const onSaveBookRequest = (formValues) => {\r\n        addBookRequest(formValues, Filters.OBJ);\r\n    };\r\n\r\n    const prepareFormOption = {\r\n        onSaveBookRequest,\r\n        onCancel: toggleModal,\r\n    };\r\n\r\n    return <Modal {...props} content={<BookRequestForm{...prepareFormOption}/>}/>\r\n};\r\n\r\nCreateBookRequest.propTypes = {\r\n    addBookRequest: PropTypes.func,\r\n    toggleModal: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, { addBookRequest })(CreateBookRequest);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport BookRequestForm from './BookRequestForm';\r\nimport Modal from '../../../shared/components/Modal';\r\nimport {editBookRequest} from '../../store/actions/bookRequestAction';\r\nimport {getFormattedOptions} from \"../../../shared/sharedMethod\";\r\nimport {bookFormatOptions} from \"../../../admin/constants\";\r\n\r\nconst EditBookRequest = (props) => {\r\n    const { bookRequest, editBookRequest, toggleModal } = props;\r\n    const bookFormats = getFormattedOptions(bookFormatOptions);\r\n\r\n    const onSaveBookRequest = (formValues) => {\r\n        editBookRequest(bookRequest.id, formValues);\r\n    };\r\n\r\n    const prepareFormOption = {\r\n        onSaveBookRequest,\r\n        onCancel: toggleModal,\r\n        initialValues: {\r\n            book_name: bookRequest.book_name,\r\n            isbn: bookRequest.isbn,\r\n            edition: bookRequest.edition,\r\n            format: bookFormats.find(format => format.id === +bookRequest.format)\r\n        }\r\n    };\r\n\r\n    return <Modal {...props} content={<BookRequestForm {...prepareFormOption} />}/>\r\n};\r\n\r\nEditBookRequest.propTypes = {\r\n    bookRequest: PropTypes.object,\r\n    editBookRequest: PropTypes.func,\r\n    toggleModal: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, { editBookRequest })(EditBookRequest);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../../../shared/components/Modal';\r\nimport DeleteAction from '../../../shared/action-buttons/DeleteAction';\r\nimport {deleteBookRequest} from '../../store/actions/bookRequestAction';\r\n\r\nconst DeleteBookRequest = (props) => {\r\n    const { bookRequestId, deleteBookRequest, toggleModal } = props;\r\n\r\n    const onDeleteBookRequest = () => {\r\n        deleteBookRequest(bookRequestId);\r\n    };\r\n\r\n    return <Modal {...props} actions={<DeleteAction onDelete={onDeleteBookRequest} onCancel={toggleModal}/>}/>\r\n};\r\n\r\nDeleteBookRequest.propTypes = {\r\n    bookRequestId: PropTypes.number,\r\n    deleteBookRequest: PropTypes.func,\r\n    toggleModal: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, { deleteBookRequest })(DeleteBookRequest);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CreateBookRequest from './CreateBookRequest';\r\nimport EditBookRequest from './EditBookRequest';\r\nimport DeleteBookRequest from './DeleteBookRequest';\r\nimport ModalConfig from '../../../shared/modal-config/ModalConfig';\r\nimport {getModalTitle} from \"../../../shared/sharedMethod\";\r\n\r\nexport const BookRequestModal = (props) => {\r\n    const { bookRequest, isCreate, isEdit, isDelete } = props;\r\n    const editConfig = { bookRequest };\r\n    const delConfig = { bookRequestId: bookRequest ? bookRequest.id : null };\r\n    const modalOptions = {\r\n        modalTitle: getModalTitle(isCreate, isEdit, isDelete, 'book-request.input.new-btn.label',\r\n            'book-request.modal.edit.title', 'book-request.modal.delete.title'),\r\n        NewComponent: CreateBookRequest,\r\n        EditComponent: EditBookRequest,\r\n        DeleteComponent: DeleteBookRequest,\r\n        deleteKey: bookRequest ? bookRequest.book_name : null,\r\n        editConfig,\r\n        delConfig,\r\n        props\r\n    };\r\n\r\n    return <ModalConfig {...modalOptions}/>;\r\n};\r\n\r\nBookRequestModal.propTypes = {\r\n    author: PropTypes.object,\r\n    isCreate: PropTypes.bool,\r\n    isEdit: PropTypes.bool,\r\n    isDelete: PropTypes.bool,\r\n};\r\n\r\nexport default BookRequestModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Button, Card, CardBody } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookRequestModal from \"./BookRequestModal\";\r\nimport HeaderTitle from \"../../../shared/header-title/HeaderTitle\";\r\nimport ReactDataTable from \"../../../shared/table/ReactDataTable\";\r\nimport ModalAction from \"../../../shared/action-buttons/ModalAction\";\r\nimport ProgressBar from \"../../../shared/progress-bar/ProgressBar\";\r\nimport { bookFormatOptions } from \"../../../admin/constants\";\r\nimport BookRequestStatus from \"../../../shared/book-request-status/BookRequestStatus\";\r\nimport {\r\n    getFormattedMessage,\r\n    getFormattedOptions,\r\n    placeholderText,\r\n} from \"../../../shared/sharedMethod\";\r\nimport { openModal } from \"../../../shared/custom-hooks\";\r\nimport { toggleModal } from \"../../../store/action/modalAction\";\r\nimport { fetchBookRequests } from \"../../store/actions/bookRequestAction\";\r\nimport { bookRequestConstants } from \"../../../constants\";\r\nimport { icon } from \"../../../constants\";\r\n\r\nconst BookRequests = (props) => {\r\n    const {\r\n        bookRequests,\r\n        toggleModal,\r\n        totalRecordMember,\r\n        isLoading,\r\n        fetchBookRequests,\r\n    } = props;\r\n    const [isCreate, isEdit, isDelete, bookRequest, onOpenModal] = openModal();\r\n    const cardModalProps = {\r\n        bookRequest,\r\n        isCreate,\r\n        isEdit,\r\n        isDelete,\r\n        toggleModal,\r\n    };\r\n    const bookFormats = getFormattedOptions(bookFormatOptions);\r\n\r\n    const onChange = (filter) => {\r\n        fetchBookRequests(filter, true);\r\n    };\r\n    const [isSpinner, setIsSpinner] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setIsSpinner(false), 1500);\r\n    }, []);\r\n\r\n    const onClickModal = (isEdit, bookRequest = null, isDelete = false) => {\r\n        onOpenModal(isEdit, bookRequest, isDelete);\r\n        toggleModal();\r\n    };\r\n\r\n    const renderModalAction = (row) => {\r\n        switch (row.status) {\r\n            case bookRequestConstants.APPROVED:\r\n            case bookRequestConstants.AVAILABLE:\r\n                return (\r\n                    <ModalAction\r\n                        onOpenModal={onClickModal}\r\n                        isHideEditIcon={true}\r\n                        isHideDeleteIcon={true}\r\n                        item={row}\r\n                    />\r\n                );\r\n            default:\r\n                return <ModalAction onOpenModal={onClickModal} item={row} />;\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            name: placeholderText(\"book-request.input.isbn.label\"),\r\n            selector: (row) => row.isbn,\r\n            sortable: true,\r\n            cell: (row) => <span>{row.isbn}</span>,\r\n            minWidth: \"200px\",\r\n        },\r\n        {\r\n            name: placeholderText(\"books.radio.book.label\"),\r\n            selector: (row) => row.book_name,\r\n            sortable: true,\r\n            cell: (row) => <span>{row.book_name}</span>,\r\n        },\r\n        {\r\n            name: placeholderText(\"book-request.input.edition.label\"),\r\n            selector: (row) => row.edition,\r\n            sortable: true,\r\n            cell: (row) => <span>{row.edition}</span>,\r\n        },\r\n        {\r\n            name: placeholderText(\"book-request.select.format.label\"),\r\n            selector: (row) => row.format,\r\n            sortable: true,\r\n            cell: (row) => {\r\n                const format = bookFormats.find(\r\n                    (format) => format.id === row.format\r\n                );\r\n                if (format) {\r\n                    return format.name;\r\n                }\r\n            },\r\n        },\r\n        {\r\n            name: placeholderText(\"react-data-table.status.column\"),\r\n            selector: (row) => row.status,\r\n            sortable: true,\r\n            center: true,\r\n            cell: (row) => <BookRequestStatus status={row.status} />,\r\n        },\r\n        {\r\n            name: placeholderText(\"react-data-table.action.column\"),\r\n            selector: (row) => row.id,\r\n            right: true,\r\n            cell: (row) => renderModalAction(row),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    // console.log({ totalRecordMember });\r\n\r\n    return (\r\n        <section className=\"member_books_request\">\r\n            {!isSpinner ? (\r\n                <div className=\"container\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"section-title-center text-center\">\r\n                            <h2 className=\"display-6\">\r\n                                {placeholderText(\"book-request.title\")}\r\n                            </h2>\r\n                            <div className=\"section-divider divider-traingle\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"common-container\">\r\n                            <div className=\"float-right\">\r\n                                <Button\r\n                                    onClick={() => onClickModal(false)}\r\n                                    size=\"md\"\r\n                                    color=\"primary ml-2 text-white\"\r\n                                >\r\n                                    {placeholderText(\r\n                                        \"book-request.input.new-btn.label\"\r\n                                    )}\r\n                                </Button>\r\n                            </div>\r\n                            <ReactDataTable\r\n                                items={bookRequests}\r\n                                columns={columns}\r\n                                loading={isLoading}\r\n                                className={\"table-bordered table-striped mt-2\"}\r\n                                emptyStateMessageId=\"book-request.empty-state.title\"\r\n                                emptyNotFoundStateMessageId=\"books-request.not-found.empty-state.title\"\r\n                                totalRows={totalRecordMember}\r\n                                onChange={onChange}\r\n                                icon={icon.BOOK}\r\n                                autoOverFlow={true}\r\n                            />\r\n                            <BookRequestModal {...cardModalProps} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"spinner\">\r\n                    <img src=\"/public/images/301.gif\" />\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nBookRequests.propTypes = {\r\n    bookRequests: PropTypes.array,\r\n    totalRecordMember: PropTypes.number,\r\n    isLoading: PropTypes.bool,\r\n    fetchBookRequests: PropTypes.func,\r\n    toggleModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { bookRequests, isLoading, totalRecordMember } = state;\r\n    return { bookRequests, isLoading, totalRecordMember };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchBookRequests, toggleModal })(\r\n    BookRequests\r\n);\r\n"],"names":["BookRequestForm","props","onSaveBookRequest","handleSubmit","inputRef","createRef","bookFormats","getFormattedOptions","bookFormatOptions","useEffect","current","focus","className","Field","name","label","required","groupText","component","InputGroup","options","placeholder","Select","SaveAction","onSave","formValues","book_name","isbn","edition","format","id","propTypes","initialValues","PropTypes","reduxForm","form","validate","errors","first_name","getFormattedMessage","i","fetchBookRequests","filter","isLoading","dispatch","setLoading","url","apiBaseURL","_","limit","order_By","search","pageSize","requestParam","apiConfig","then","response","type","bookRequestActionType","payload","data","setTotalRecord","totalRecords","addToast","text","message","toastType","CreateBookRequest","addBookRequest","prepareFormOption","Filters","onCancel","toggleModal","Modal","content","connect","bookRequest","filterObj","EditBookRequest","editBookRequest","find","bookRequestId","DeleteBookRequest","deleteBookRequest","actions","DeleteAction","onDelete","BookRequestModal","isCreate","isEdit","isDelete","editConfig","delConfig","modalOptions","modalTitle","getModalTitle","NewComponent","EditComponent","DeleteComponent","deleteKey","ModalConfig","author","BookRequests","bookRequests","totalRecordMember","openModal","onOpenModal","cardModalProps","useState","isSpinner","setIsSpinner","setTimeout","onClickModal","columns","placeholderText","selector","row","sortable","cell","minWidth","status","center","BookRequestStatus","right","bookRequestConstants","ModalAction","isHideEditIcon","isHideDeleteIcon","item","renderModalAction","ignoreRowClick","allowOverflow","button","src","Button","onClick","size","color","ReactDataTable","items","loading","emptyStateMessageId","emptyNotFoundStateMessageId","totalRows","onChange","icon","autoOverFlow","state"],"sourceRoot":""}