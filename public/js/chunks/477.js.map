{"version":3,"file":"js/chunks/477.js","mappings":"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","sources":["webpack:///./resources/pos/src/member/store/actions/ebookAction.js","webpack:///./resources/pos/src/member/components/E-books/ebook.scss?2cac","webpack:///./resources/pos/src/member/components/E-books/Ebooks.js","webpack:///./resources/pos/src/member/components/E-books/ebook.scss"],"sourcesContent":["import { eBookActionType, toastType } from \"../../constants\";\r\nimport apiConfig from \"../../config/apiConfig\";\r\nimport { setLoading } from \"../../../store/action/progressBarAction\";\r\nimport { addToast } from \"../../../store/action/toastAction\";\r\nimport { toggleModal } from \"../../../store/action/modalAction\";\r\nimport requestParam from \"../../../shared/requestParam\";\r\nimport { setTotalRecord } from \"./totalRecordAction\";\r\nimport _ from \"lodash\";\r\nimport { getFormattedMessage } from \"../../../shared/sharedMethod\";\r\nimport { apiBaseURL } from \"../../../constants\";\r\n\r\nexport const fetchEBookRequests =\r\n    (filter = {}, isLoading = false) =>\r\n    async (dispatch) => {\r\n        isLoading ? dispatch(setLoading(true)) : null;\r\n        let url = apiBaseURL.E_BOOK;\r\n        if (\r\n            !_.isEmpty(filter) &&\r\n            (filter.limit || filter.order_By || filter.search)\r\n        ) {\r\n            url += requestParam(filter);\r\n        }\r\n        await apiConfig\r\n            .get(url)\r\n            .then((response) => {\r\n                if (response) {\r\n                    dispatch({\r\n                        type: eBookActionType.FETCH_E_BOOKS,\r\n                        payload: response.data.data,\r\n                    });\r\n                    dispatch(setTotalRecord(response.data.totalRecords));\r\n                }\r\n                isLoading ? dispatch(setLoading(false)) : null;\r\n            })\r\n            .catch(({ response }) => {\r\n                if (response) {\r\n                    dispatch(\r\n                        addToast({\r\n                            text: response.data.message,\r\n                            type: toastType.ERROR,\r\n                        })\r\n                    );\r\n                }\r\n                isLoading ? dispatch(setLoading(false)) : null;\r\n            });\r\n    };\r\n","import api from \"!../../../../../../node_modules/laravel-mix/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].oneOf[1].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[7].oneOf[1].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[7].oneOf[1].use[3]!./ebook.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Card, CardBody } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport HeaderTitle from \"../../../shared/header-title/HeaderTitle\";\r\nimport ReactDataTable from \"../../../shared/table/ReactDataTable\";\r\nimport ProgressBar from \"../../../shared/progress-bar/ProgressBar\";\r\nimport {\r\n    getFormattedMessage,\r\n    getFormattedOptions,\r\n} from \"../../../shared/sharedMethod\";\r\nimport { fetchEBookRequests } from \"../../store/actions/ebookAction\";\r\nimport { icon, Tokens } from \"../../../constants\";\r\nimport \"./ebook.scss\";\r\nimport PDFviewerModal from \"../../../components/book-details/PDFviewerModal\";\r\n\r\nconst Ebooks = (props) => {\r\n    const { ebooks, isLoading, fetchEBookRequests, totalRecordMember } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const onChange = (filter) => {\r\n        fetchEBookRequests(filter, true);\r\n    };\r\n\r\n    const onClickBookDownload = (e_book_url) => {\r\n        const api =\r\n            e_book_url + \"?token=\" + localStorage.getItem(Tokens.MEMBER);\r\n        window.open(api, \"_blank\");\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            name: getFormattedMessage(\"e-books.input.isbn.label\"),\r\n            selector: (row) => row.isbn,\r\n            width: \"200px\",\r\n            sortable: true,\r\n            cell: (row) => <span>{row.isbn_no}</span>,\r\n        },\r\n        {\r\n            name: getFormattedMessage(\"e-books.input.name.label\"),\r\n            selector: (row) => row.e_book_name,\r\n            sortable: true,\r\n            cell: (row) => (\r\n                <span className=\"book-name\">\r\n                    {row.name}\r\n                    {/* <i\r\n                        className=\"fa fa-download fa-md cursor-pointer text-info ml-2\"\r\n                        onClick={() => onClickBookDownload(row.e_book_url)}\r\n                    /> */}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            name: getFormattedMessage(\"e-books.input.edition.label\"),\r\n            selector: (row) => row.edition,\r\n            sortable: true,\r\n            cell: (row) => <span>{row.edition}</span>,\r\n        },\r\n        {\r\n            name: getFormattedMessage(\"e-books.input.language.label\"),\r\n            selector: (row) => row.language_name,\r\n            sortable: true,\r\n            cell: (row) => <span>{row.language_name}</span>,\r\n        },\r\n        {\r\n            name: getFormattedMessage(\"e-books.input.author.label\"),\r\n            selector: (row) => row.authors,\r\n            width: \"300px\",\r\n            sortable: true,\r\n            cell: (row) => <span>{row.authors}</span>,\r\n        },\r\n        {\r\n            name: \"Action\",\r\n            selector: (row) => row.authors,\r\n            width: \"300px\",\r\n            sortable: true,\r\n            cell: (row) => (\r\n                <Button\r\n                    size=\"sm\"\r\n                    color=\"danger text-white\"\r\n                    onClick={(e) => toggle()}\r\n                >\r\n                    Read\r\n                </Button>\r\n            ),\r\n        },\r\n    ];\r\n    const pdfModalOptions = {\r\n        modal,\r\n        toggle,\r\n        filePath: ebooks.length > 0 ? ebooks[0].file_name : null,\r\n    };\r\n    return (\r\n        <Row className=\"animated fadeIn\">\r\n            <Col sm={12} className=\"mb-2\">\r\n                <HeaderTitle title=\"E-Book\" />\r\n                <h5 className=\"page-heading\">\r\n                    {getFormattedMessage(\"e-book.title\")}\r\n                </h5>\r\n                <ProgressBar />\r\n            </Col>\r\n            <Col sm={12}>\r\n                <div className=\"sticky-table-container\">\r\n                    <Card>\r\n                        <CardBody>\r\n                            <ReactDataTable\r\n                                items={ebooks}\r\n                                columns={columns}\r\n                                loading={isLoading}\r\n                                totalRows={totalRecordMember}\r\n                                emptyStateMessageId=\"e-book.empty-state.title\"\r\n                                emptyNotFoundStateMessageId=\"e-books.not-found.empty-state.title\"\r\n                                onChange={onChange}\r\n                                icon={icon.BOOK}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </Col>\r\n            <PDFviewerModal {...pdfModalOptions} />\r\n        </Row>\r\n    );\r\n};\r\n\r\nEbooks.propTypes = {\r\n    ebooks: PropTypes.array,\r\n    isLoading: PropTypes.bool,\r\n    fetchEBookRequests: PropTypes.func,\r\n    totalRecordMember: PropTypes.number,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { ebooks, isLoading, totalRecordMember } = state;\r\n    // console.log({ ebooks });\r\n    return { ebooks, isLoading, totalRecordMember };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchEBookRequests })(Ebooks);\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".book-name{cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/pos/src/member/components/E-books/ebook.scss\"],\"names\":[],\"mappings\":\"AAEA,WACI,cADJ\",\"sourcesContent\":[\"@import \\\"../../../scss/variables\\\";\\r\\n\\r\\n.book-name {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["i","options","Ebooks","props","ebooks","isLoading","fetchEBookRequests","totalRecordMember","useState","modal","setModal","toggle","columns","name","getFormattedMessage","selector","row","isbn","width","sortable","cell","isbn_no","e_book_name","className","edition","language_name","authors","Button","size","color","onClick","e","pdfModalOptions","filePath","length","file_name","Row","Col","sm","HeaderTitle","title","ProgressBar","Card","CardBody","ReactDataTable","items","loading","totalRows","emptyStateMessageId","emptyNotFoundStateMessageId","onChange","filter","icon","PDFviewerModal","propTypes","PropTypes","connect","state","dispatch","setLoading","url","apiBaseURL","_","limit","order_By","search","requestParam","apiConfig","then","response","type","eBookActionType","payload","data","setTotalRecord","totalRecords","addToast","text","message","toastType","___CSS_LOADER_EXPORT___","push","module","id"],"sourceRoot":""}